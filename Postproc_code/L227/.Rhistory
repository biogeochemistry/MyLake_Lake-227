scale_colour_manual("",
breaks = c("Observed", "Modeled"),
values = c("black", "red")) +
theme(legend.position = c(0.9,0.9))
p
head(obs_temp)
p4 <- ggplot(mod.match.temp, aes(x = date)) +
geom_point(aes(y = Temp(Depth=="1"), col = "Observed"), pch = 19, size = 1) +
geom_line(aes(y = mod.Temp1m, col = "Modeled"), size = 0.5) +
ylim(0,150) +
ylab(expression(Total ~ Phosphorus ~ (mu*g / L))) +
xlab(" ") +
scale_colour_manual("",
breaks = c("Observed", "Modeled"),
values = c("black", "red")) +
theme(legend.position = c(0.9,0.9))
p4
head(obs_temp)
p4 <- ggplot(mod.match.temp, aes(x = date)) +
geom_point(aes(y = obs_temp$Temp(Depth=="1"), col = "Observed"), pch = 19, size = 1) +
geom_line(aes(y = mod.Temp1m, col = "Modeled"), size = 0.5) +
ylim(0,150) +
ylab(expression(Total ~ Phosphorus ~ (mu*g / L))) +
xlab(" ") +
scale_colour_manual("",
breaks = c("Observed", "Modeled"),
values = c("black", "red")) +
theme(legend.position = c(0.9,0.9))
p4
Temp
mod.match.temp
p4 <- ggplot(mod.match.temp, aes(x = date)) +
geom_point(aes(y = Temp[Depth=="1"], col = "Observed"), pch = 19, size = 1) +
geom_line(aes(y = mod.Temp1m, col = "Modeled"), size = 0.5) +
ylim(0,150) +
ylab(expression(Total ~ Phosphorus ~ (mu*g / L))) +
xlab(" ") +
scale_colour_manual("",
breaks = c("Observed", "Modeled"),
values = c("black", "red")) +
theme(legend.position = c(0.9,0.9))
p4
p4 <- ggplot(mod.match.temp, aes(x = date)) +
geom_point(aes(y = Temp[Depth=="1"], col = "Observed"), pch = 19, size = 1) +
geom_line(aes(y = mod.Temp1m[Depth=="1"], col = "Modeled"), size = 0.5) +
ylim(0,150) +
ylab(expression(Total ~ Phosphorus ~ (mu*g / L))) +
xlab(" ") +
scale_colour_manual("",
breaks = c("Observed", "Modeled"),
values = c("black", "red")) +
theme(legend.position = c(0.9,0.9))
p4
p4 <- ggplot(mod.match.temp[Depth=="1"], aes(x = date)) +
geom_point(aes(y = Temp[Depth=="1"], col = "Observed"), pch = 19, size = 1) +
geom_line(aes(y = mod.Temp1m[Depth=="1"], col = "Modeled"), size = 0.5) +
ylim(0,150) +
ylab(expression(Total ~ Phosphorus ~ (mu*g / L))) +
xlab(" ") +
scale_colour_manual("",
breaks = c("Observed", "Modeled"),
values = c("black", "red")) +
theme(legend.position = c(0.9,0.9))
mod.match.temp[Depth=="1"]
head(mod.match.temp)
obs_temp <- read.csv("Observed_Temperature.csv")
attach(obs_temp)
obs_temp$date <- as.Date(obs_temp$date) #, format = "%Y-%m-%d") #Converts data to date structure
mod.match.temp <- inner_join(obs_temp, mod, by = "date")
head(mod.match.temp)
p4 <- ggplot(mod.match.temp, aes(x = date)) +
geom_point(aes(y = obs.Temp1m, col = "Observed"), pch = 19, size = 1) +
geom_line(aes(y = mod.Temp1m, col = "Modeled"), size = 0.5) +
ylim(0,150) +
ylab(expression(Total ~ Phosphorus ~ (mu*g / L))) +
xlab(" ") +
scale_colour_manual("",
breaks = c("Observed", "Modeled"),
values = c("black", "red")) +
theme(legend.position = c(0.9,0.9))
p4
p4 <- ggplot(mod.match.temp, aes(x = date)) +
geom_point(aes(y = obs.Temp1m, col = "Observed"), pch = 19, size = 1) +
geom_line(aes(y = mod.Temp1m, col = "Modeled"), size = 0.5) +
ylim(0,30) +
ylab(expression(Temperature)) +
xlab(" ") +
scale_colour_manual("",
breaks = c("Observed", "Modeled"),
values = c("black", "red")) +
theme(legend.position = c(0.9,0.9))
p4
p4 <- ggplot(mod.match.temp, aes(x = date)) +
geom_point(aes(y = obs.Temp1m, col = "Observed"), pch = 19, size = 1) +
geom_line(aes(y = mod.Temp1m, col = "Modeled"), size = 0.5) +
ylim(0,30) +
ylab(expression(Temperature *~degree*C)) +
xlab(" ") +
scale_colour_manual("",
breaks = c("Observed", "Modeled"),
values = c("black", "red")) +
theme(legend.position = c(0.9,0.9))
p4 <- ggplot(mod.match.temp, aes(x = date)) +
geom_point(aes(y = obs.Temp1m, col = "Observed"), pch = 19, size = 1) +
geom_line(aes(y = mod.Temp1m, col = "Modeled"), size = 0.5) +
ylim(0,30) +
ylab(expression("Temperature "*~degree*C)) +
xlab(" ") +
scale_colour_manual("",
breaks = c("Observed", "Modeled"),
values = c("black", "red")) +
theme(legend.position = c(0.9,0.9))
p4
p4 <- ggplot(mod.match.temp, aes(x = date)) +
geom_point(aes(y = obs.Temp1m, col = "Observed"), pch = 19, size = 1) +
geom_line(aes(y = mod.Temp1m, col = "Modeled"), size = 0.5) +
ylim(0,30) +
ylab(expression("Temperature ("*~degree*C)) +
xlab(" ") +
scale_colour_manual("",
breaks = c("Observed", "Modeled"),
values = c("black", "red")) +
theme(legend.position = c(0.9,0.9))
p4
p4 <- ggplot(mod.match.temp, aes(x = date)) +
geom_point(aes(y = obs.Temp1m, col = "Observed"), pch = 19, size = 1) +
geom_line(aes(y = mod.Temp1m, col = "Modeled"), size = 0.5) +
ylim(0,30) +
ylab(expression("Temperature "(*~degree*C)) +
p4 <- ggplot(mod.match.temp, aes(x = date)) +
geom_point(aes(y = obs.Temp1m, col = "Observed"), pch = 19, size = 1) +
geom_line(aes(y = mod.Temp1m, col = "Modeled"), size = 0.5) +
ylim(0,30) +
ylab(expression("Temperature ("*~degree*C")") +
p4 <- ggplot(mod.match.temp, aes(x = date)) +
geom_point(aes(y = obs.Temp1m, col = "Observed"), pch = 19, size = 1) +
geom_line(aes(y = mod.Temp1m, col = "Modeled"), size = 0.5) +
ylim(0,30) +
ylab(expression("Temperature " ( degree*C)) +
xlab(" ") +
scale_colour_manual("",
breaks = c("Observed", "Modeled"),
values = c("black", "red")) +
theme(legend.position = c(0.9,0.9))
require(gridExtra)
p4 <- ggplot(mod.match.temp, aes(x = date)) +
geom_point(aes(y = obs.Temp1m, col = "Observed"), pch = 19, size = 1) +
geom_line(aes(y = mod.Temp1m, col = "Modeled"), size = 0.5) +
ylim(0,30) +
ylab(expression("Temperature " ( degree*C)) +
xlab(" ") +
scale_colour_manual("",
breaks = c("Observed", "Modeled"),
values = c("black", "red")) +
theme(legend.position = c(0.9,0.9))
require(gridExtra)
p4 <- ggplot(mod.match.temp, aes(x = date)) +
geom_point(aes(y = obs.Temp1m, col = "Observed"), pch = 19, size = 1) +
geom_line(aes(y = mod.Temp1m, col = "Modeled"), size = 0.5) +
ylim(0,30) +
ylab(expression("Temperature " ( degree*C)) +
xlab(" ") +
scale_colour_manual("",
breaks = c("Observed", "Modeled"),
values = c("black", "red")) +
theme(legend.position = c(0.9,0.9))
require(gridExtra)
p4 <- ggplot(mod.match.temp, aes(x = date)) +
geom_point(aes(y = obs.Temp1m, col = "Observed"), pch = 19, size = 1) +
geom_line(aes(y = mod.Temp1m, col = "Modeled"), size = 0.5) +
ylim(0,30) +
ylab(expression("Temperature " ( degree*C))) +
xlab(" ") +
scale_colour_manual("",
breaks = c("Observed", "Modeled"),
values = c("black", "red")) +
theme(legend.position = c(0.9,0.9))
p4
p5 <- ggplot(mod.match.temp, aes(x = date)) +
geom_point(aes(y = obs.Temp4m, col = "Observed"), pch = 19, size = 1) +
geom_line(aes(y = mod.Temp4m, col = "Modeled"), size = 0.5) +
ylim(0,30) +
ylab(expression("Temperature " ( degree*C))) +
xlab(" ") +
scale_colour_manual("",
breaks = c("Observed", "Modeled"),
values = c("black", "red")) +
theme(legend.position = c(0.9,0.9))
p5
p6 <- ggplot(mod.match.temp, aes(x = date)) +
geom_point(aes(y = obs.Temp9m, col = "Observed"), pch = 19, size = 1) +
geom_line(aes(y = mod.Temp9m, col = "Modeled"), size = 0.5) +
ylim(0,30) +
ylab(expression("Temperature " ( degree*C))) +
xlab(" ") +
scale_colour_manual("",
breaks = c("Observed", "Modeled"),
values = c("black", "red")) +
theme(legend.position = c(0.9,0.9))
p6
p6 <- ggplot(mod.match.temp, aes(x = date)) +
geom_point(aes(y = obs.Temp9m, col = "Observed"), pch = 19, size = 1) +
geom_line(aes(y = mod.Temp9m, col = "Modeled"), size = 0.5) +
ylim(0,10) +
ylab(expression("Temperature " ( degree*C))) +
xlab(" ") +
scale_colour_manual("",
breaks = c("Observed", "Modeled"),
values = c("black", "red")) +
theme(legend.position = c(0.9,0.9))
p6
mod.lm <- lm(mod.match$mod.TP ~ mod.match$obs.TP)
summary(mod.lm)
head(mod.match.temp)
p6 <- ggplot(mod.match.temp, aes(x = obs.Temp1m, y = mod.temp.1m, color=Year)) +
geom_point(pch = 19, size = 1.5) +
geom_abline(slope=1, intercept=0) + #(intercept = mod.lm[[1]][[1]], slope = mod.lm[[1]][[2]]) +
scale_x_continuous(limits=c(0,100)) + scale_y_continuous(limits=c(0,100)) +
xlab(expression(TP ~ Observed ~ (mu*g / L))) +
ylab(expression(TP ~ Modeled ~ (mu*g / L))) +
#geom_text(x = 175, y = 50, label = paste("y = ", round(mod.lm[[1]][[2]], digits = 2),"x + ",
#                                                  round(mod.lm[[1]][[1]], digits = 2))) +
#geom_text(x = 175, y = 45, label = paste("R2","=",round(summary(mod.lm)[8][[1]], digits = 4)))
scale_color_distiller(palette="YlGnBu") +
theme(legend.position=c(0.9, 0.8))
p6
p6 <- ggplot(mod.match.temp, aes(x = obs.Temp1m, y = mod.Temp1m, color=Year)) +
geom_point(pch = 19, size = 1.5) +
geom_abline(slope=1, intercept=0) + #(intercept = mod.lm[[1]][[1]], slope = mod.lm[[1]][[2]]) +
scale_x_continuous(limits=c(0,100)) + scale_y_continuous(limits=c(0,100)) +
xlab(expression(TP ~ Observed ~ (mu*g / L))) +
ylab(expression(TP ~ Modeled ~ (mu*g / L))) +
#geom_text(x = 175, y = 50, label = paste("y = ", round(mod.lm[[1]][[2]], digits = 2),"x + ",
#                                                  round(mod.lm[[1]][[1]], digits = 2))) +
#geom_text(x = 175, y = 45, label = paste("R2","=",round(summary(mod.lm)[8][[1]], digits = 4)))
scale_color_distiller(palette="YlGnBu") +
theme(legend.position=c(0.9, 0.8))
p6
p6 <- ggplot(mod.match.temp, aes(x = obs.Temp1m, y = mod.Temp1m)) +
geom_point(pch = 19, size = 1.5) +
geom_abline(slope=1, intercept=0) + #(intercept = mod.lm[[1]][[1]], slope = mod.lm[[1]][[2]]) +
scale_x_continuous(limits=c(0,100)) + scale_y_continuous(limits=c(0,100)) +
xlab(expression(TP ~ Observed ~ (mu*g / L))) +
ylab(expression(TP ~ Modeled ~ (mu*g / L))) +
#geom_text(x = 175, y = 50, label = paste("y = ", round(mod.lm[[1]][[2]], digits = 2),"x + ",
#                                                  round(mod.lm[[1]][[1]], digits = 2))) +
#geom_text(x = 175, y = 45, label = paste("R2","=",round(summary(mod.lm)[8][[1]], digits = 4)))
scale_color_distiller(palette="YlGnBu") +
theme(legend.position=c(0.9, 0.8))
p6
obs.totaltemp <- rbind(mod.match.temp$obs.Temp1m, mod.match.temp$obs.Temp4m, mod.match.temp$obs.Temp9m)
dim(obs.totaltemp)
dim(mod.match.temp)
obs.totaltemp <- cbind(mod.match.temp$obs.Temp1m, mod.match.temp$obs.Temp4m, mod.match.temp$obs.Temp9m)
dim(obs.totaltemp)
obs.totaltemp
obs.totaltemp <- stack(obs.totaltemp)
obs.totaltemp <- cbind(mod.match.temp$obs.Temp1m, mod.match.temp$obs.Temp4m, mod.match.temp$obs.Temp9m)
obs.totaltemp <- stack(obs.totaltemp)
dim(obs.totaltemp)
obs.totaltemp <- cbind(mod.match.temp$obs.Temp1m, mod.match.temp$obs.Temp4m, mod.match.temp$obs.Temp9m)
class(obs.totaltemp)
obs.totaltemp <- data.frame(cbind(mod.match.temp$obs.Temp1m, mod.match.temp$obs.Temp4m, mod.match.temp$obs.Temp9m))
class(obs.totaltemp)
obs.totaltempa <- data.frame(cbind(mod.match.temp$obs.Temp1m, mod.match.temp$obs.Temp4m, mod.match.temp$obs.Temp9m))
obs.totaltemp <- stack(obs.totaltemp)
obs.totaltemp <- stack(obs.totaltempa)
obs.totaltemp
dim(obs.totaltemp)
mod.totaltempa <- data.frame(cbind(mod.match.temp$mod.Temp1m, mod.match.temp$mod.Temp4m, mod.match.temp$mod.Temp9m))
mod.totaltemp <- stack(mod.totaltempa)
obs.totaltemp[1,]
obs.totaltemp[,1]
totaltemp <- cbind(obs.totaltemp[,1], mod.totaltemp[,1])
head(totaltemp)
colnames(totaltemp) <- c("TempObs","TempMod")
head(totaltemp)
p6 <- ggplot(totaltemp, aes(x = TempObs, y = TempMod)) +
geom_point(pch = 19, size = 1.5) +
geom_abline(slope=1, intercept=0) + #(intercept = mod.lm[[1]][[1]], slope = mod.lm[[1]][[2]]) +
scale_x_continuous(limits=c(0,100)) + scale_y_continuous(limits=c(0,100)) +
xlab(expression(TP ~ Observed ~ (mu*g / L))) +
ylab(expression(TP ~ Modeled ~ (mu*g / L))) +
scale_color_distiller(palette="YlGnBu") +
theme(legend.position=c(0.9, 0.8))
totaltemp <- data.frame(cbind(obs.totaltemp[,1], mod.totaltemp[,1]))
class(totaltemp)
p6 <- ggplot(totaltemp, aes(x = TempObs, y = TempMod)) +
geom_point(pch = 19, size = 1.5) +
geom_abline(slope=1, intercept=0) + #(intercept = mod.lm[[1]][[1]], slope = mod.lm[[1]][[2]]) +
scale_x_continuous(limits=c(0,100)) + scale_y_continuous(limits=c(0,100)) +
xlab(expression(TP ~ Observed ~ (mu*g / L))) +
ylab(expression(TP ~ Modeled ~ (mu*g / L))) +
scale_color_distiller(palette="YlGnBu") +
theme(legend.position=c(0.9, 0.8))
p6
colnames(totaltemp) <- c("TempObs","TempMod")
p6 <- ggplot(totaltemp, aes(x = TempObs, y = TempMod)) +
geom_point(pch = 19, size = 1.5) +
geom_abline(slope=1, intercept=0) + #(intercept = mod.lm[[1]][[1]], slope = mod.lm[[1]][[2]]) +
scale_x_continuous(limits=c(0,100)) + scale_y_continuous(limits=c(0,100)) +
xlab(expression(TP ~ Observed ~ (mu*g / L))) +
ylab(expression(TP ~ Modeled ~ (mu*g / L))) +
scale_color_distiller(palette="YlGnBu") +
theme(legend.position=c(0.9, 0.8))
p6
p6 <- ggplot(totaltemp, aes(x = TempObs, y = TempMod)) +
geom_point(pch = 19, size = 1.5) +
geom_abline(slope=1, intercept=0) + #(intercept = mod.lm[[1]][[1]], slope = mod.lm[[1]][[2]]) +
scale_x_continuous(limits=c(0,30)) + scale_y_continuous(limits=c(0,30)) +
xlab(expression("Temperature Observed " ( degree*C))) +
ylab(expression("Temperature Modeled " ( degree*C))) +
scale_color_distiller(palette="YlGnBu") +
theme(legend.position=c(0.9, 0.8))
p6
tempregression <- lm(TempObs ~ TempMod)
TempObs
head(totaltemp)
tempregression <- lm(totaltemp$TempObs ~ totaltemp$TempMod)
summary(tempregression)
mse <- mean(residuals(tempregression)^2)
rmse <- sqrt(mse)
p6
obs <- read.csv("Observed_IntegratedEpi.csv", header = T)
attach(obs)
colnames(obs) <- c("org.date","Year","Month","Day", "obs.TP","obs.chla","obs.TDP")
obs_temp <- read.csv("Observed_Temperature.csv")
attach(obs_temp)
mod <- read.csv("Output_IntegratedEpi.csv", header = F)
colnames(mod) <- c("Year","Month","Day","ML.date","mod.chla","mod.TDP","mod.TP", "mod.Temp1m", "mod.Temp4m", "mod.Temp9m")
#Let's tidy! - part 1
library(tidyr)
library(magrittr)
obs <- obs %>%
unite(date, Year, Month, Day, sep = '-') #%>%
#filter(!is.na(obs.TP))
obs <- data.frame(obs, Month, Year)
obs <- na.omit(obs)
obs <- obs[,-1]
mod <- mod %>% unite(date, Year, Month, Day, sep = '-')
mod <- mod[,-2]
# Convert time object
obs$date <- as.Date(obs$date, format = "%Y-%m-%d") #Converts data to date structure
obs_temp$date <- as.Date(obs_temp$date) #, format = "%Y-%m-%d") #Converts data to date structure
mod$date <- as.Date(mod$date, format = "%Y-%m-%d") #Converts data to date structure
# tidy! - part 2: match model time and observational time
library(dplyr)
mod.match <- inner_join(obs,mod, by = "date")
mod.match.temp <- inner_join(obs_temp, mod, by = "date")
obs.totaltempa <- data.frame(cbind(mod.match.temp$obs.Temp1m, mod.match.temp$obs.Temp4m, mod.match.temp$obs.Temp9m))
obs.totaltemp <- stack(obs.totaltempa)
mod.totaltempa <- data.frame(cbind(mod.match.temp$mod.Temp1m, mod.match.temp$mod.Temp4m, mod.match.temp$mod.Temp9m))
mod.totaltemp <- stack(mod.totaltempa)
totaltemp <- data.frame(cbind(obs.totaltemp[,1], mod.totaltemp[,1]))
colnames(totaltemp) <- c("TempObs","TempMod")
p4 <- ggplot(mod.match.temp, aes(x = date)) +
geom_point(aes(y = obs.Temp1m, col = "Observed"), pch = 19, size = 1) +
geom_line(aes(y = mod.Temp1m, col = "Modeled"), size = 0.5) +
ylim(0,30) +
ylab(expression("Temperature " ( degree*C))) +
xlab(" ") +
scale_colour_manual("",
breaks = c("Observed", "Modeled"),
values = c("black", "red")) +
theme(legend.position = c(0.9,0.9))
p4
p5 <- ggplot(mod.match.temp, aes(x = date)) +
geom_point(aes(y = obs.Temp4m, col = "Observed"), pch = 19, size = 1) +
geom_line(aes(y = mod.Temp4m, col = "Modeled"), size = 0.5) +
ylim(0,30) +
ylab(expression("Temperature " ( degree*C))) +
xlab(" ") +
scale_colour_manual("",
breaks = c("Observed", "Modeled"),
values = c("black", "red")) +
theme(legend.position = c(0.9,0.9))
p6 <- ggplot(mod.match.temp, aes(x = date)) +
geom_point(aes(y = obs.Temp9m, col = "Observed"), pch = 19, size = 1) +
geom_line(aes(y = mod.Temp9m, col = "Modeled"), size = 0.5) +
ylim(0,10) +
ylab(expression("Temperature " ( degree*C))) +
xlab(" ") +
scale_colour_manual("",
breaks = c("Observed", "Modeled"),
values = c("black", "red")) +
theme(legend.position = c(0.9,0.9))
p5
p6
tempregression <- lm(totaltemp$TempObs ~ totaltemp$TempMod)
summary(tempregression)
mse <- mean(residuals(tempregression)^2)
rmse <- sqrt(mse)
p6 <- ggplot(totaltemp, aes(x = TempObs, y = TempMod)) +
geom_point(pch = 19, size = 1.5) +
geom_abline(slope=1, intercept=0) +
scale_x_continuous(limits=c(0,30)) + scale_y_continuous(limits=c(0,30)) +
xlab(expression("Temperature Observed " ( degree*C))) +
ylab(expression("Temperature Modeled " ( degree*C))) +
scale_color_distiller(palette="YlGnBu") +
theme(legend.position=c(0.9, 0.8))
p6
rmse
p6
setwd("/Users/krsalkgu/Documents/SourceTree/L227/Postproc_code/L227")
NtoP <- read.csv("NP_Stoichiometry.csv")
attach(NtoP)
head(NtoP)
theme_set(theme_std())
theme_grey(base_size = base_size, base_family = base_family) %+replace%
theme(axis.ticks = element_line(colour = "black", size = 1),
legend.key = element_rect(colour = "white"),
panel.background = element_rect(fill = "white", colour = NA),
panel.border = element_rect(fill = NA, colour = NA),
axis.line = element_line(size = 0.5, colour = "black"),
panel.grid.major = element_line(NA),
panel.grid.minor = element_line(NA),
strip.background = element_rect(fill = "grey80", colour = "grey50", size = 0.2),
axis.text  = element_text(size=rel(0.9)),
axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm"),size=rel(1)),
axis.title.y = element_text(margin = unit(c(0, 3, 0, 0), "mm"),size=rel(1), angle = 90),
strip.text = element_text(size = rel(1.15), colour = "black", face = "bold"),
plot.margin=unit(c(10,10,10,10),"pt")
)
library(ggplot2)
theme_std <- function (base_size = 16, base_family = "") {
theme_grey(base_size = base_size, base_family = base_family) %+replace%
theme(axis.ticks = element_line(colour = "black", size = 1),
legend.key = element_rect(colour = "white"),
panel.background = element_rect(fill = "white", colour = NA),
panel.border = element_rect(fill = NA, colour = NA),
axis.line = element_line(size = 0.5, colour = "black"),
panel.grid.major = element_line(NA),
panel.grid.minor = element_line(NA),
strip.background = element_rect(fill = "grey80", colour = "grey50", size = 0.2),
axis.text  = element_text(size=rel(0.9)),
axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm"),size=rel(1)),
axis.title.y = element_text(margin = unit(c(0, 3, 0, 0), "mm"),size=rel(1), angle = 90),
strip.text = element_text(size = rel(1.15), colour = "black", face = "bold"),
plot.margin=unit(c(10,10,10,10),"pt")
)
}
theme_set(theme_std())
TN:TP <- TN.TP.1*30.97/14.01
TN.TP.1
TNtoTP <- TN.TP.1*30.97/14.01
head(NtoP)
TNtoTP <- TN.TP.1*30.97/14.01
PNtoPP <- PN.PP.1*30.97/14.01
DINtoTDP <- DIN.TDP.1*30.97/14.01
TDNtoTDP <- TDN.TDP.1*30.97/14.01
NtoPmolar <- data.frame(Start.Date, TNtoTP, PNtoPP, DINtoTDP, TDNtoTDP)
head(NtoPmolar)
ggplot(NtoPmolar, aes(x = Start.Date)) +
geom_point(aes(y = TNtoTP), pch = 19, size = 1) +
geom_line(aes(y = TNtoTP), size = 0.5) +
ylim(0,200) +
ylab(expression(TN:TP)) +
xlab(" ") +
theme(legend.position = c(0.9,0.9))
ggplot(NtoPmolar, aes(x = Start.Date)) +
geom_point(aes(y = TNtoTP), pch = 19, size = 1) +
geom_point(aes(y = TDNtoTDP), size = 0.5) +
ylim(0,200) +
ylab(expression(TN:TP)) +
xlab(" ") +
theme(legend.position = c(0.9,0.9))
ggplot(NtoPmolar, aes(x = Start.Date)) +
geom_point(aes(y = TNtoTP, color="red"), pch = 19, size = 1) +
geom_point(aes(y = TDNtoTDP, color="black"), size = 0.5) +
ylim(0,200) +
ylab(expression(TN:TP)) +
xlab(" ") +
theme(legend.position = c(0.9,0.9))
ggplot(NtoPmolar, aes(x = Start.Date)) +
geom_point(aes(y = TNtoTP, col="red"), size = 0.5) +
geom_point(aes(y = TDNtoTDP, col="black"), size = 0.5) +
ylim(0,200) +
ylab(expression(TN:TP)) +
xlab(" ") +
theme(legend.position = c(0.9,0.9))
ggplot(NtoPmolar, aes(x = Start.Date)) +
geom_point(aes(y = TNtoTP), size = 0.5) +
geom_point(aes(y = TDNtoTDP), size = 0.5) +
ylim(0,200) +
ylab(expression(TN:TP)) +
xlab(" ") +
theme(legend.position = c(0.9,0.9)) +
scale_color_manual("black", "red")
ggplot(NtoPmolar, aes(x = Start.Date)) +
geom_point(aes(y = TNtoTP), size = 0.5) +
geom_point(aes(y = TDNtoTDP), size = 0.5) +
ylim(0,200) +
ylab(expression(TN:TP)) +
xlab(" ") +
theme(legend.position = c(0.9,0.9)) +
scale_color_manual(values=c("black", "red"))
ggplot(NtoPmolar, aes(x = Start.Date)) +
geom_point(aes(y = TNtoTP, col="Total"), size = 0.5) +
geom_point(aes(y = TDNtoTDP, col="Dissolved"), size = 0.5) +
ylim(0,200) +
ylab(expression(TN:TP)) +
xlab(" ") +
theme(legend.position = c(0.9,0.9)) +
scale_colour_manual("", breaks = c("Total", "Dissolved"), values = c("black", "red")) +
ggplot(NtoPmolar, aes(x = Start.Date)) +
geom_point(aes(y = TNtoTP, col="Total"), size = 0.5) +
geom_point(aes(y = TDNtoTDP, col="Dissolved"), size = 0.5) +
ylim(0,200) +
ylab(expression(TN:TP)) +
xlab(" ") +
theme(legend.position = c(0.9,0.9)) +
scale_colour_manual("", breaks = c("Total", "Dissolved"), values = c("black", "red"))
